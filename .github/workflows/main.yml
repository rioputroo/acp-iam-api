name : CI/CD Process

on:
  push:
    branches:
      - master


jobs:
  unit-test:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Running Unit Test
        run: go test ./... -cover

  build-push-docker:
    name: Build and Push Docker to DockerHub
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v2
      - name: Generate Config File
        env:
          CONFIG: ${{secrets.CONFIG_APP}}
        run: |
          echo "$CONFIG" > ./app.config.json
      - name: Build Image
        run: docker build -t rioputroo/acp:1.0 .

      - name: Login DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Push Docker Registry
        run: docker push rioputroo/acp:1.0

  deployment-ec2:
    name: "Deploy to ec2 from registry docker hub"
    runs-on: ubuntu-latest
    needs: build-push-docker
    steps:
      - uses: actions/checkout@v2
      - name: configuration SSH
        env:
          SSH_USER: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY"
          echo "$SSH_KEY" > ~/.ssh/acp-final-project-aws-key.pem
          chmod 400 ~/.ssh/acp-final-project-aws-key.pem
          cat >>~/.ssh/config <<END
          Host development
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/acp-final-project-aws-key.pem
            StrictHostKeyChecking=no
          END
      - name: Connect EC2 & Remove All Container & Pull from Registry & Start
        run: ssh development 'docker rm -f $(docker ps -a -q) || true && docker pull rioputroo/acp:1.0 && docker run -d -p 8000:8000 --name=acp-iam-api rioputroo/acp:1.0'


